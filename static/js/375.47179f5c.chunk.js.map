{"version":3,"file":"static/js/375.47179f5c.chunk.js","mappings":"8LAEaA,E,OAAgBC,GAAAA,IAAH,8F,SCAbC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAIhB,C,+ICbYC,GAAeT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,2LAYZW,EAAsBX,EAAAA,GAAAA,KAAH,6CAGnBY,EAAwBZ,EAAAA,GAAAA,QAAH,+DAIrBa,EAAmBb,EAAAA,GAAAA,IAAH,8CAGhBc,EAAyBd,EAAAA,GAAAA,GAAH,qEAItBe,EAAiCf,EAAAA,GAAAA,GAAH,qEAI9BgB,EAA+BhB,EAAAA,GAAAA,GAAH,qEAI5BiB,EAAsBjB,EAAAA,GAAAA,IAAH,iGAKnBkB,EAA0BlB,EAAAA,GAAAA,GAAH,oE,kBC6DpC,EArFqB,WAAO,IAAD,IACzB,GAAwCmB,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,EAAa,IAAIC,KASvB,OAPAC,EAAAA,EAAAA,YAAU,WACRP,GAAW,GACXQ,MAAM,GAAD,OAZG,gCAYH,iBAAgBP,EAAhB,oBAXO,qCAYTQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GAAI,OAAId,EAAgBc,EAApB,GAA2BZ,GAAW,GACnD,GAAE,CAACC,KAGF,gCACGF,IAAW,SAACrB,EAAA,EAAD,IACXmB,IACC,UAACT,EAAD,YACE,UAACF,EAAD,CAAc2B,GAAE,oBAAEV,EAASW,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAA1C,UACG,IADH,qBAIA,UAAC1B,EAAD,YACE,0BACE,gBACE2B,IACEnB,EAAaoB,YAAb,yCACsCpB,EAAaoB,aADnD,mEAIFC,IAAKrB,EAAasB,eAClBvC,MAAO,SAGX,UAACU,EAAD,YACE,UAACC,EAAD,WACGM,EAAasB,eADhB,KACkC,IAC/Bd,EAAWe,YAAYvB,EAAawB,cAFvC,SAIA,wCAAgBC,KAAKC,MAAkC,GAA5B1B,EAAa2B,cAAxC,QACA,SAAChC,EAAD,wBAGA,uBAC6B,KAA1BK,EAAa4B,SACV5B,EAAa4B,SACb,0BAEN,SAAChC,EAAD,sBAGA,uBAAII,EAAa6B,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAG1D,UAACpC,EAAD,YACE,mDACA,UAACC,EAAD,YACE,yBACE,SAAC,KAAD,CACEkB,GAAE,kBAAaZ,EAAb,SACFa,MAAO,CAAEC,KAAMZ,EAASW,MAAMC,MAFhC,qBAOF,0BACG,KACD,SAAC,KAAD,CACEF,GAAE,kBAAaZ,EAAb,YACFa,MAAO,CAAEC,KAAMZ,EAASW,MAAMC,MAFhC,+BASN,SAAC,EAAAgB,SAAD,CAAUC,UAAU,SAACtD,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,WAMX,C","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderSection = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;","import { Hearts } from 'react-loader-spinner';\nimport { LoaderSection } from './Loader.styled';\nexport const Loader = () => {\n  return (\n    <LoaderSection>\n      <Hearts\n        height=\"80\"\n        width=\"80\"\n        color=\"#2384F5\"\n        ariaLabel=\"hearts-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </LoaderSection>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const GoBackButton = styled(NavLink)`\n  border: 2px solid #abb4be;\n  padding: 5px;\n  text-decoration: none;\n  color: black;\n  font-size: 16px;\n\n  &:hover,\n  &:focus {\n    color: #2384f5;\n  }\n`;\nexport const MovieDetailsSection = styled.main`\n  margin-top: 24px;\n`;\nexport const MovieDetailsContainer = styled.section`\n  margin-top: 15px;\n  display: flex;\n`;\nexport const MovieDetailsInfo = styled.div`\n  margin-left: 15px;\n`;\nexport const MovieDetailsInfoTittle = styled.h2`\n  margin-bottom: 15px;\n  margin-top: 15px;\n`;\nexport const MovieDetailsInfoOverviewTittle = styled.h3`\n  margin-bottom: 15px;\n  margin-top: 15px;\n`;\nexport const MovieDetailsInfoGenresTittle = styled.h4`\n  margin-bottom: 15px;\n  margin-top: 15px;\n`;\nexport const MovieAdditionalInfo = styled.div`\n  margin-top: 5px;\n  padding: 24px 15px;\n  border: 2px solid #abb4be;\n`;\nexport const MovieAdditionalInfoList = styled.ul`\n  margin-top: 24px;\n  padding-left: 15px;\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  GoBackButton,\n  MovieDetailsSection,\n  MovieDetailsContainer,\n  MovieDetailsInfo,\n  MovieDetailsInfoTittle,\n  MovieDetailsInfoOverviewTittle,\n  MovieDetailsInfoGenresTittle,\n  MovieAdditionalInfo,\n  MovieAdditionalInfoList,\n} from './MovieDetails.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '2aeb67ea92a5fcd35004195f81b34bb6';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const dateRelise = new Date();\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(`${URL}movie/${movieId}?api_key=${API_KEY}`)\n      .then(response => response.json())\n      .then(data => setMovieDetails(data), setLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {movieDetails && (\n        <MovieDetailsSection>\n          <GoBackButton to={location.state?.from ?? '/'}>\n            {' '}\n            &#10232; Go back\n          </GoBackButton>\n          <MovieDetailsContainer>\n            <div>\n              <img\n                src={\n                  movieDetails.poster_path\n                    ? `https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`\n                    : `https://i.kym-cdn.com/photos/images/original/002/020/910/1b5.jpg`\n                }\n                alt={movieDetails.original_title}\n                width={600}\n              />\n            </div>\n            <MovieDetailsInfo>\n              <MovieDetailsInfoTittle>\n                {movieDetails.original_title} ({' '}\n                {dateRelise.getFullYear(movieDetails.release_date)} )\n              </MovieDetailsInfoTittle>\n              <p>User Score: {Math.round(movieDetails.vote_average * 10)}%</p>\n              <MovieDetailsInfoOverviewTittle>\n                Overview\n              </MovieDetailsInfoOverviewTittle>\n              <p>\n                {movieDetails.overview !== ''\n                  ? movieDetails.overview\n                  : 'There are no reviews'}\n              </p>\n              <MovieDetailsInfoGenresTittle>\n                Genres\n              </MovieDetailsInfoGenresTittle>\n              <p>{movieDetails.genres.map(ganre => ganre.name).join(', ')}</p>\n            </MovieDetailsInfo>\n          </MovieDetailsContainer>\n          <MovieAdditionalInfo>\n            <p>Additional Information</p>\n            <MovieAdditionalInfoList>\n              <li>\n                <Link\n                  to={`/movies/${movieId}/cast`}\n                  state={{ from: location.state.from }}\n                >\n                  Cast\n                </Link>\n              </li>\n              <li>\n                {' '}\n                <Link\n                  to={`/movies/${movieId}/reviews`}\n                  state={{ from: location.state.from }}\n                >\n                  Reviews\n                </Link>\n              </li>\n            </MovieAdditionalInfoList>\n          </MovieAdditionalInfo>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </MovieDetailsSection>\n      )}\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["LoaderSection","styled","Loader","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","GoBackButton","NavLink","MovieDetailsSection","MovieDetailsContainer","MovieDetailsInfo","MovieDetailsInfoTittle","MovieDetailsInfoOverviewTittle","MovieDetailsInfoGenresTittle","MovieAdditionalInfo","MovieAdditionalInfoList","useState","movieDetails","setMovieDetails","loading","setLoading","movieId","useParams","location","useLocation","dateRelise","Date","useEffect","fetch","then","response","json","data","to","state","from","src","poster_path","alt","original_title","getFullYear","release_date","Math","round","vote_average","overview","genres","map","ganre","name","join","Suspense","fallback"],"sourceRoot":""}